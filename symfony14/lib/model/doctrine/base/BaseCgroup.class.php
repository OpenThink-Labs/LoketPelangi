<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Cgroup', 'doctrine');

/**
 * BaseCgroup
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property Doctrine_Collection $CustomerGroup
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getName()          Returns the current record's "name" value
 * @method string              getDescription()   Returns the current record's "description" value
 * @method Doctrine_Collection getCustomerGroup() Returns the current record's "CustomerGroup" collection
 * @method Cgroup              setId()            Sets the current record's "id" value
 * @method Cgroup              setName()          Sets the current record's "name" value
 * @method Cgroup              setDescription()   Sets the current record's "description" value
 * @method Cgroup              setCustomerGroup() Sets the current record's "CustomerGroup" collection
 * 
 * @package    POSLoketPelangi
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCgroup extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cgroup');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 120, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 120,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('CustomerGroup', array(
             'local' => 'id',
             'foreign' => 'group_id'));
    }
}
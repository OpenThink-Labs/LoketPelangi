CREATE TABLE bidang_usaha (kode_usaha VARCHAR(6), keterangan VARCHAR(50) NOT NULL, detail VARCHAR(1) DEFAULT 'F' NOT NULL, transfer VARCHAR(1) DEFAULT 'N' NOT NULL, PRIMARY KEY(kode_usaha)) ENGINE = INNODB;
CREATE TABLE jenis_bayar (kode_jenis_bayar VARCHAR(1), keterangan VARCHAR(20), PRIMARY KEY(kode_jenis_bayar)) ENGINE = INNODB;
CREATE TABLE kelompok (id INT AUTO_INCREMENT, nama VARCHAR(120) NOT NULL, keterangan VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE kelompok_pelanggan (kode_pelanggan VARCHAR(11), kelompok_id INT, PRIMARY KEY(kode_pelanggan, kelompok_id)) ENGINE = INNODB;
CREATE TABLE lokasi (id BIGINT AUTO_INCREMENT, nama VARCHAR(255), root_id BIGINT, lft INT, rgt INT, level SMALLINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE loket (kode_loket VARCHAR(3), keterangan VARCHAR(50), alamat VARCHAR(255) NOT NULL, telepon VARCHAR(30) NOT NULL, telepon2 VARCHAR(30) NOT NULL, fax VARCHAR(30) NOT NULL, email VARCHAR(100) NOT NULL, kontak VARCHAR(10) NOT NULL, inactive TINYINT NOT NULL, PRIMARY KEY(kode_loket)) ENGINE = INNODB;
CREATE TABLE pelanggan (kode_pelanggan VARCHAR(11), kode_salesman VARCHAR(9) NOT NULL, kode_loket VARCHAR(3) NOT NULL, kode_usaha VARCHAR(6) NOT NULL, kode_pos VARCHAR(5) NOT NULL, lokasi_id BIGINT NOT NULL, nama VARCHAR(100), nama_singkat VARCHAR(50), alamat VARCHAR(100), alamat_tagih VARCHAR(100), dtgl_masuk DATETIME, attn VARCHAR(20), telepon VARCHAR(20), npwp VARCHAR(20), term INT, status VARCHAR(1) DEFAULT 'A' NOT NULL, takakura_pinjaman INT, takakura_uang_jaminan DECIMAL(10, 2), tong_sampah_pinjaman INT, tong_sampah_uang_jaminan DECIMAL(10, 2), telepon2 VARCHAR(20), transfer VARCHAR(1) DEFAULT 'N' NOT NULL, cetak_harga VARCHAR(1) DEFAULT 'F' NOT NULL, pembayaran VARCHAR(1) DEFAULT 'K' NOT NULL, INDEX kode_salesman_idx (kode_salesman), INDEX lokasi_id_idx (lokasi_id), INDEX kode_loket_idx (kode_loket), INDEX kode_pos_idx (kode_pos), INDEX kode_usaha_idx (kode_usaha), INDEX pembayaran_idx (pembayaran), INDEX status_idx (status), PRIMARY KEY(kode_pelanggan)) ENGINE = INNODB;
CREATE TABLE salesman (kode_salesman VARCHAR(9), kode_loket VARCHAR(3) NOT NULL, nama VARCHAR(30), transfer VARCHAR(1) DEFAULT 'N' NOT NULL, alamat VARCHAR(100), status VARCHAR(1) DEFAULT 'A' NOT NULL, INDEX kode_loket_idx (kode_loket), PRIMARY KEY(kode_salesman)) ENGINE = INNODB;
CREATE TABLE status_pelanggan (kode_status_pelanggan VARCHAR(1), keterangan VARCHAR(10), PRIMARY KEY(kode_status_pelanggan)) ENGINE = INNODB;
CREATE TABLE wilayah (kode_pos VARCHAR(5), keterangan TEXT, latitude FLOAT(18, 2) NOT NULL, longitude FLOAT(18, 2) NOT NULL, transfer VARCHAR(1) DEFAULT 'N' NOT NULL, PRIMARY KEY(kode_pos)) ENGINE = INNODB;
ALTER TABLE kelompok_pelanggan ADD CONSTRAINT kelompok_pelanggan_kode_pelanggan_pelanggan_kode_pelanggan FOREIGN KEY (kode_pelanggan) REFERENCES pelanggan(kode_pelanggan);
ALTER TABLE kelompok_pelanggan ADD CONSTRAINT kelompok_pelanggan_kelompok_id_kelompok_id FOREIGN KEY (kelompok_id) REFERENCES kelompok(id);
ALTER TABLE pelanggan ADD CONSTRAINT pelanggan_status_status_pelanggan_kode_status_pelanggan FOREIGN KEY (status) REFERENCES status_pelanggan(kode_status_pelanggan);
ALTER TABLE pelanggan ADD CONSTRAINT pelanggan_pembayaran_jenis_bayar_kode_jenis_bayar FOREIGN KEY (pembayaran) REFERENCES jenis_bayar(kode_jenis_bayar);
ALTER TABLE pelanggan ADD CONSTRAINT pelanggan_lokasi_id_lokasi_id FOREIGN KEY (lokasi_id) REFERENCES lokasi(id);
ALTER TABLE pelanggan ADD CONSTRAINT pelanggan_kode_usaha_bidang_usaha_kode_usaha FOREIGN KEY (kode_usaha) REFERENCES bidang_usaha(kode_usaha);
ALTER TABLE pelanggan ADD CONSTRAINT pelanggan_kode_salesman_salesman_kode_salesman FOREIGN KEY (kode_salesman) REFERENCES salesman(kode_salesman);
ALTER TABLE pelanggan ADD CONSTRAINT pelanggan_kode_pos_wilayah_kode_pos FOREIGN KEY (kode_pos) REFERENCES wilayah(kode_pos);
ALTER TABLE pelanggan ADD CONSTRAINT pelanggan_kode_loket_loket_kode_loket FOREIGN KEY (kode_loket) REFERENCES loket(kode_loket);
ALTER TABLE salesman ADD CONSTRAINT salesman_kode_loket_loket_kode_loket FOREIGN KEY (kode_loket) REFERENCES loket(kode_loket);
